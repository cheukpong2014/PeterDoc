using System;
using System.Linq;
using System.Web.UI.WebControls;
using Milton.Modules.eClaim.Components;
using DotNetNuke.Security;
using DotNetNuke.Services.Exceptions;
using DotNetNuke.Entities.Modules;
using DotNetNuke.Entities.Modules.Actions;
using DotNetNuke.Services.Localization;
using DotNetNuke.UI.Utilities;
using System.Collections.Generic;
using System.Web.Script.Serialization;
using DotNetNuke.Entities.Users;
using DotNetNuke.UI.Skins;
using DotNetNuke.UI.Skins.Controls;

namespace Milton.Modules.eClaim
{
    public partial class View : eClaimModuleBase, IActionable
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                JavaScriptSerializer Serializer = new JavaScriptSerializer();
                var usr = UserController.Instance.GetUsersBasicSearch(PortalId, 0, 100, "UserID", false, "UserID", UserId.ToString()).Where(u => u.UserID == Convert.ToInt32(UserId)).First();
                var userRegion = usr.Profile.GetPropertyValue("RegionCode");
                var userID = usr.UserID.ToString();
                Components.ClaimForm cf = new Components.ClaimForm();
                ClaimFormController cfctl = new ClaimFormController();
                
                var getSuper = new SuperUsersController().GetSuperUsersByStaffID(usr.UserID);
                List<Components.ClaimForm> allForms;
                if (getSuper.Count() > 0)
                {
                    string regions = "";
                    foreach (var _data in getSuper)
                    {
                        regions += "'";
                        regions += _data.Region;
                        regions += "',";
                    }
                    regions = regions.Substring(0, regions.Length - 1);
                    allForms = cfctl.GetClaimFormBySuperUserRegions(regions).ToList();
                }
                else
                {
                    allForms = cfctl.GetClaimFormByUserID(userID).ToList();
                }

                List<Components.ClaimForm> filter = allForms;
                var result = filter.Select(form => new FormTable
                {
                    ID = form.ID.ToString(),
                    SubmissionDate = (form.SubmissionDate.HasValue) ? form.SubmissionDate.Value.ToString("yyyy-MM-dd") : "",
                    BU = form.BusinessUnit,
                    CreatedBy = UserController.Instance.GetUserById(PortalId, form.CreatedBy).DisplayName,
                    ClaimFormType = displayFormType(form),
                    StatusID = new ClaimFormStatusController().GetClaimFormStatusBySql1(form.StatusID).First().StatusDesc

                }).ToList();

                if (result.Count() > 0)
                {
                    gvTable.DataSource = result;
                    gvTable.DataBind();

                    gvTable.HeaderRow.TableSection = TableRowSection.TableHeader;
                    gvTable.FooterRow.TableSection = TableRowSection.TableFooter;
                }

            }
            catch (Exception exc) //Module failed to load
            {
                Exceptions.ProcessModuleLoadException(this, exc);
            }
        }
        protected string displayFormType(Components.ClaimForm form)
        {
            if (form.ClaimFormType == "P")
            {
                string str = form.ProjectName + " (" + form.JobNo + ")";
                return str;
            }else
            {
                return new ClaimFormTypeController().GetClaimFormTypeBySql1(form.ClaimFormType).First().ClaimFormTypeDesc;
            }
        }
        protected void btnViewClaimForm_Click(object sender, EventArgs e)
        {
            try
            {
                Response.Redirect(DotNetNuke.Common.Globals.NavigateURL("ClaimForm", "mid=" + ModuleId)+"/id/0");
            }
            catch (Exception exc) //Module failed to load
            {
                Exceptions.ProcessModuleLoadException(this, exc);
            }
        }

        public ModuleActionCollection ModuleActions
        {
            get
            {
                var actions = new ModuleActionCollection
                    {
                        {
                            GetNextActionID(), Localization.GetString("EditModule", LocalResourceFile), "", "", "",
                            EditUrl(), false, SecurityAccessLevel.Edit, true, false
                        }
                    };
                return actions;
            }
        }

        protected void gvTable_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            e.Row.Cells[0].CssClass = "hiddenColumn";

            if (!isSuperUser(UserId))
                e.Row.Cells[2].CssClass = "hiddenColumn";

            if (e.Row.RowType == DataControlRowType.Header)
            {
                e.Row.Cells[1].Text = Localization.GetString("SubmissionDate", LocalResourceFile);
                //e.Row.Cells[2].Text = Localization.GetString("BU", LocalResourceFile);
                e.Row.Cells[3].Text = Localization.GetString("CreatedBy", LocalResourceFile);
                e.Row.Cells[4].Text = Localization.GetString("ClaimFormType", LocalResourceFile);
                e.Row.Cells[5].Text = Localization.GetString("StatusID", LocalResourceFile);
            }
        }
    }
    public class FormTable//affect order
    {

        public string ID { get; set; }
        //public string Region { get; set; }
        public string SubmissionDate { get; set; }
        public string BU { get; set; }
        public string CreatedBy { get; set; }
        public string ClaimFormType { get; set; }
        //public string JobNo { get; set; }
        //public string ProjectName { get; set; }
        //public DateTime CreateDate { get; set; }
        //public int LastUpdatedBy { get; set; }
        //public string LastUpdateDate { get; set; }
        public string StatusID { get; set; }
        //public string NAV { get; set; }
    }
}