using System;
using System.Web.Caching;
using DotNetNuke.Common.Utilities;
using DotNetNuke.ComponentModel.DataAnnotations;
using DotNetNuke.Entities.Content;
using System.Collections.Generic;
using DotNetNuke.Data;
using System.Linq;

public class CompanyController
{
//create
public void CreateCompany(Company t)
{
	using (IDataContext ctx = DataContext.Instance())
	{
		var rep = ctx.GetRepository<Company>();
		rep.Insert(t);
	}
}
//update
public void UpdateCompany(Company t)
{
	using (IDataContext ctx = DataContext.Instance())
	{
		var rep = ctx.GetRepository<Company>();
		rep.Update(t);
	}
}
//delete
public void DeleteCompanyByPrimKey(string ID)
{
	var t = GetCompanysByPrimKey(ID);
	DeleteCompany(t.First());
}
public void DeleteCompany(Company t)
{
	using (IDataContext ctx = DataContext.Instance())
	{
		var rep = ctx.GetRepository<Company>();
		//rep.Delete("where RefId = @0", refId);
		rep.Delete(t);
	}
}
//get
public IEnumerable<Company> GetCompanys()
{
	IEnumerable<Company> t;
	using (IDataContext ctx = DataContext.Instance())
	{
		var rep = ctx.GetRepository<Company>();
		t = rep.Get();
	}
	return t;
}
//get by sql
public IEnumerable<Company> GetCompanysByPrimKey(string ID)
{
	IEnumerable<Company> t;
	using (IDataContext context = DataContext.Instance())
	{
		var rep = context.GetRepository<Company>();
		t = rep.Find("where  = @0", ID);
	}
	return t;
}
}